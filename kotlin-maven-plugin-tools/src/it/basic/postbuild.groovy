/*-
 * #%L
 * kotlin-maven-plugin-tools
 * %%
 * Copyright (C) 2018 GantSign Ltd.
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */
//noinspection GroovyAssignabilityCheck
File file = new File(basedir, "target/classes/META-INF/maven/plugin.xml")
if (!file.isFile()) {
    throw new FileNotFoundException("Could not find generated plugin.xml: $file")
}
def expected = '''
<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.10-->

<plugin>
  <name>example-maven-plugin</name>
  <description></description>
  <groupId>com.example</groupId>
  <artifactId>example-maven-plugin</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <goalPrefix>example</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <requiredMavenVersion>3.9.5</requiredMavenVersion>
  <mojos>
    <mojo>
      <goal>example</goal>
      <description>Example description.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>true</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>true</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>true</requiresOnline>
      <inheritedByDefault>false</inheritedByDefault>
      <phase>compile</phase>
      <executePhase>package</executePhase>
      <executeGoal>compiler</executeGoal>
      <executeLifecycle>exampleLifecycle</executeLifecycle>
      <implementation>com.example.ExampleMojo</implementation>
      <language>java</language>
      <configurator>exampleConfigurator</configurator>
      <instantiationStrategy>singleton</instantiationStrategy>
      <executionStrategy>always</executionStrategy>
      <since>exampleVersion</since>
      <deprecated>Example deprecated.</deprecated>
      <requiresDependencyCollection>runtime</requiresDependencyCollection>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>exampleParameterName</name>
          <alias>exampleParameterAlias</alias>
          <type>java.lang.String</type>
          <since>exampleParameterVersion</since>
          <deprecated>Example parameter deprecated message.</deprecated>
          <required>true</required>
          <editable>true</editable>
          <description>Example parameter description.</description>
        </parameter>
      </parameters>
      <configuration>
        <exampleParameterName implementation="java.lang.String" default-value="exampleParameterDefaultValue">${exampleParameterProperty}</exampleParameterName>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.repository.RepositorySystem</role>
          <role-hint>exampleComponentHint</role-hint>
          <field-name>exampleComponent</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on example-maven-plugin.
Call mvn example:help -Ddetail=true -Dgoal=&lt;goal-name&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.example.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-builder-support</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-resolver-provider</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-impl</artifactId>
      <type>jar</type>
      <version>1.9.16</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-named-locks</artifactId>
      <type>jar</type>
      <version>1.9.16</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-api</artifactId>
      <type>jar</type>
      <version>1.9.16</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-spi</artifactId>
      <type>jar</type>
      <version>1.9.16</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.resolver</groupId>
      <artifactId>maven-resolver-util</artifactId>
      <type>jar</type>
      <version>1.9.16</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>3.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.5</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.5</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <type>jar</type>
      <version>5.1.0</version>
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <type>jar</type>
      <version>32.0.1-jre</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>failureaccess</artifactId>
      <type>jar</type>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.5.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.7.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.26</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.36</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.9.5</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
      <type>jar</type>
      <version>1.2.41</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <type>jar</type>
      <version>1.2.41</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <type>jar</type>
      <version>13.0</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk7</artifactId>
      <type>jar</type>
      <version>1.2.41</version>
    </dependency>
  </dependencies>
</plugin>'''.trim().normalize()

def actual = file.getText("UTF-8").trim().normalize()

assert expected == actual
